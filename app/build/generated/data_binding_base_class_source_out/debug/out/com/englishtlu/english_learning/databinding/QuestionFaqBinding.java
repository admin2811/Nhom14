// Generated by view binder compiler. Do not edit!
package com.englishtlu.english_learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.englishtlu.english_learning.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class QuestionFaqBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView answer;

  @NonNull
  public final RelativeLayout expandedLayout;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView question;

  private QuestionFaqBinding(@NonNull CardView rootView, @NonNull TextView answer,
      @NonNull RelativeLayout expandedLayout, @NonNull LinearLayout linearLayout,
      @NonNull TextView question) {
    this.rootView = rootView;
    this.answer = answer;
    this.expandedLayout = expandedLayout;
    this.linearLayout = linearLayout;
    this.question = question;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static QuestionFaqBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuestionFaqBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.question_faq, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuestionFaqBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answer;
      TextView answer = ViewBindings.findChildViewById(rootView, id);
      if (answer == null) {
        break missingId;
      }

      id = R.id.expanded_layout;
      RelativeLayout expandedLayout = ViewBindings.findChildViewById(rootView, id);
      if (expandedLayout == null) {
        break missingId;
      }

      id = R.id.linear_layout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.question;
      TextView question = ViewBindings.findChildViewById(rootView, id);
      if (question == null) {
        break missingId;
      }

      return new QuestionFaqBinding((CardView) rootView, answer, expandedLayout, linearLayout,
          question);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
